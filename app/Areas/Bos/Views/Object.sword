<div class="search-box">
    <mb-create @click="create.bucket_name=request.bucket_name"></mb-create>
    <m-select prop="bucket_name" data="buckets"></m-select>
    <m-text prop="prefix"></m-text>
    <m-text prop="extension"></m-text>
</div>
<m-dialog mode="create">
    <m-select prop="bucket_name" data="buckets"></m-select>
    <m-text prop="key" title="ext,file,md5,md5_l1,md5_2,uuid,uuid_l1,uuid_l2,ymd..."></m-text>
    <m-checkbox label="仅增加" prop="insert_only">是</m-checkbox>
    <el-form-item prop="image_url">
        <el-upload
                :action="upload_action"
                :show-file-list="false"
                :before-upload="beforeUpload"
                :on-success="uploadSuccess"
                :on-change="uploadChange"
                :auto-upload='false'
                ref="upload"
        >
            <img v-if="create.image_url" :src="create.image_url" alt="">
        </el-upload>
    </el-form-item>
</m-dialog>

<m-table>
    <m-index></m-index>
    <m-text label="缩略图" width="80" v-slot="{row}">
        <img v-if="['png', 'jpeg', 'jpg'].includes(row.extension)" :src="row.url"
             alt="row.original_name"
             style="width: 50px; height: 50px">
    </m-text>
    <m-text prop="url"></m-text>
    <m-text prop="original_name" width="200"></m-text>
    <m-text prop="mime_type" width="100"></m-text>
    <m-text prop="size" width="80"></m-text>
    <m-text label="dimension" width="100" v-slot="{row}">@{{row.width}}*@{{row.height}}</m-text>
    <m-text prop="md5" width="150"></m-text>
    <m-ip prop="ip"></m-ip>
    <m-timestamp prop="created_time"></m-timestamp>
    <m-ops ops="delete"></m-ops>
</m-table>
@section('css')
    <style>
        .el-upload {
            border: 1px dashed #d9d9d9;
            border-radius: 6px;
            cursor: pointer;
            position: relative;
            overflow: hidden;

            width: 178px;
            height: 178px;
            display: block;
            margin: 5px auto;
        }

        .el-upload img {
            width: auto;
            height: auto;
            max-width: 100%;
            max-height: 100%;
        }
    </style>
@append
@section('script')
    <script>
        vm = new App({
            data: {
                topic: '对象',
                request: {
                    page: 1,
                    size: 10,
                    bucket_name: '',
                    extension: '',
                    prefix: '',
                },
                response: [],
                create: {
                    bucket_name: '',
                    key: '{uuid_l2}.{ext}',
                    insert_only: true,
                    image_url: '',
                },
                upload_action: '',
                buckets: [],
            },
            created() {
                this.ajaxGet("buckets", (res) => {
                    this.buckets = res.map((bucket) => bucket.bucket_name);
                    if (!this.request.bucket_name) {
                        this.request.bucket_name = this.buckets[0].bucket_name;
                    }
                });
            },
            methods: {
                do_create() {
                    this.$refs.upload.submit()
                },
                beforeUpload(file) {
                    return new Promise((resolve, reject) => {
                        this.ajaxGet('getUploadToken', this.create, function (res) {
                            this.upload_action = res;
                            resolve();
                        }).catch(function () {
                            reject();
                        });
                    });
                },
                uploadSuccess(res) {
                    if (res.code === 0) {
                        this.createVisible = false;
                        this.create.image_url = '';
                        this.reload();
                    } else {
                        this.$alert(res.msg);
                    }
                },
                uploadChange(file, fileList) {
                    if (file.status === 'ready') {
                        this.create.image_url = file.raw.type.indexOf('image/') === 0 ? URL.createObjectURL(file.raw) : '';
                        if (fileList.length > 1) {
                            fileList.shift();
                        }
                    }
                }
            }
        });
    </script>
@append
